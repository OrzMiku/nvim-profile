-- =============================================================================
--  NeoVim 基础 UI 与行为设置
-- =============================================================================
local opt = vim.opt

-- -----------------------------------------------------------------------------
--  行号
-- -----------------------------------------------------------------------------
-- 左侧显示当前行的绝对行号（从1开始计数）
opt.number = true

-- 同时显示相对行号（当前行是0，上下行分别是1,2,3...）
-- 在执行 3j/d3k 等操作时，可以直观地看到要移动或删除几行
opt.relativenumber = true

-- -----------------------------------------------------------------------------
--  缩进与制表符
-- -----------------------------------------------------------------------------
-- 设置 Tab 字符显示的宽度为4个空格
-- 你可以根据语言习惯修改，如 Python 通常用4，JavaScript 可能用2
opt.tabstop = 4

-- 设置 >> 和 << 命令（用于缩进/反缩进）移动的列数
-- 建议与 tabstop 保持一致，避免混乱
opt.shiftwidth = 4

-- 开启后，按下 Tab 键实际插入的是空格而不是真正的 Tab 字符
-- 推荐开启，因为空格在不同编辑器间显示一致
-- 特殊文件如 Makefile 必须用真实 Tab，可在该文件中临时关闭
opt.expandtab = true

-- 新的一行自动继承上一行的缩进
-- 开启后，回车换行时光标会自动对齐到合适的缩进位置
-- 对编写结构化代码很有帮助，建议保持开启
opt.autoindent = true

-- 智能缩进：在输入 if、for、函数等关键字后，自动增加缩进
-- 对 C、Java 等语言特别有用，但可能对简单文本编辑造成干扰
-- 如果觉得不合适可以关闭
opt.smartindent = true

-- -----------------------------------------------------------------------------
--  折行
-- -----------------------------------------------------------------------------
-- 当文本行超过窗口宽度时，自动折到下一行显示
-- 如果关闭，需要水平滚动查看长行内容
-- 建议保持开启，特别是编辑 Markdown 或长行代码注释时
opt.wrap = true

-- 折行时尽量在单词之间断开，而不是在单词中间
-- 避免出现一个单词被拆成两半的情况
-- 需要 wrap 开启才有效，建议保持开启
opt.linebreak = true

-- -----------------------------------------------------------------------------
--  光标与滚动
-- -----------------------------------------------------------------------------
-- 高亮显示光标所在的整行
-- 有助于在代码中快速定位光标位置
-- 如果觉得干扰视线可以关闭
opt.cursorline = true

-- 滚动时保持光标周围有8行可见
-- 避免光标跑到窗口边缘，提高编辑舒适度
-- 可以根据屏幕大小调整，小屏幕可以设为5，大屏幕可以设为10
opt.scrolloff = 8

-- 水平滚动时保持光标左右有8列可见
-- 与 scrolloff 类似，但控制水平方向
-- 对编写长行代码很有帮助
opt.sidescrolloff = 8

-- -----------------------------------------------------------------------------
--  鼠标支持
-- -----------------------------------------------------------------------------
-- Vim 模式说明：
--   n = 普通模式（Normal）: 执行命令
--   v = 可视模式（Visual）: 选择文本
--   i = 插入模式（Insert）: 输入文本
--   c = 命令行模式（Command-line）: 输入命令
--   h = 帮助模式（Help）: 查看帮助文档
--   a = 全部模式

-- 开启鼠标支持，可以在所有模式下使用鼠标
--   左键点击：移动光标
--   左键拖拽：选择文本
--   滚轮：上下滚动
--   右键：通常无操作（可配置）
opt.mouse:append('a')

-- -----------------------------------------------------------------------------
--  剪贴板
-- -----------------------------------------------------------------------------
-- Vim 有两个主要的剪贴板寄存器：
--   "*" 寄存器（unnamed）: 传统 X11 剪贴板
--   '+' 寄存器（unnamedplus）: 现代系统剪贴板（Windows, macOS, Wayland）

-- 将系统剪贴板设置为默认寄存器
-- 开启后，y（复制）、d（剪切）、p（粘贴）操作直接与系统剪贴板交互
-- 这样可以在 NeoVim 和其他应用程序之间直接复制粘贴
-- Windows 和 macOS 用户建议保持开启
opt.clipboard:append('unnamedplus')

-- -----------------------------------------------------------------------------
--  搜索
-- -----------------------------------------------------------------------------
-- 搜索时默认忽略大小写
-- 例如搜索 'hello' 也会匹配 'Hello' 和 'HELLO'
opt.ignorecase = true

-- 智能大小写：如果搜索词包含大写字母，则区分大小写
-- 例如：搜索 'hello' 忽略大小写，但搜索 'Hello' 或 'HELLO' 则精确匹配
-- 这是完美的折中方案，建议保持开启
opt.smartcase = true

-- -----------------------------------------------------------------------------
--  外观
-- -----------------------------------------------------------------------------
-- 启用 24 位真彩色支持
-- 需要终端支持真彩色（绝大多数现代终端都支持）
-- 开启后，颜色主题能显示更丰富的色彩
-- 如果颜色显示异常可以尝试关闭
opt.termguicolors = true

-- 在指定列位置显示一条竖线，作为行长参考
-- 这里设置为第80列，这是传统代码规范的推荐行长
-- 你可以根据需要修改，如 100 或 120
-- 超过这个长度的行会穿过这条线，提醒你可能需要换行
opt.colorcolumn = '80'

-- -----------------------------------------------------------------------------
--  其他顺手的小细节
-- -----------------------------------------------------------------------------
-- 水平分割窗口时，新窗口显示在当前窗口下方
-- 避免新窗口出现在上方遮挡重要信息
-- 这是大多数人期望的行为，建议保持开启
opt.splitbelow = true

-- 垂直分割窗口时，新窗口显示在当前窗口右侧
-- 同样是为了避免遮挡左侧的重要代码
-- 保持开启符合大多数人的使用习惯
opt.splitright = true
